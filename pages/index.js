import React, { useState, useEffect, useRef } from 'react'
import Head from 'next/head';
import { useSelector } from 'react-redux';

import Layout from '../src/client/components/Layout';
import Sidebar from '../src/client/components/Sidebar';
import Themebar from '../src/client/components/Themebar';
import About from '../src/client/components/About';
import Header from '../src/client/components/Header';
import Section from '../src/client/components/Section';
import ProjectCard from '../src/client/components/ProjectCard';
import Gallery from '../src/client/components/Gallery';
import Contact from '../src/client/components/Contact';
import {
  sidebar,
  about,
  header,
  projectCards,
  gallery,
  contact
} from '../src/client/data/data.json';

//! update <Head> and all needed info later

export default function Home() {
  const theme = useSelector((state) => state.settings.theme);
  const sectionRefs= useRef({});
  const [sectionInView, setSectionInView] = useState(null);

  useEffect (() => {
    const refPositions = Object.entries(sectionRefs.current).map(([ref, el]) => [ref, el.offsetTop]);
    const main = document.getElementById('main');

    const handleScroll = () => {
      const idx = refPositions.findIndex(([_, el], i) => (
        main.scrollTop >= el && (
          refPositions[i + 1] && refPositions[i + 1][1]
            ? main.scrollTop < refPositions[i + 1][1]
            : true
        )
      ));
      setSectionInView(refPositions[idx] ? refPositions[idx][0] : null);
    }

    main.addEventListener("scroll", handleScroll);

    return () => main.addEventListener("scroll", handleScroll);
},[])

  const scrollTo = (e) => {
    if (!e.target.getAttribute('scroll-dest')) return;
    const ref = sectionRefs.current[`${e.target.getAttribute('scroll-dest').toLowerCase()}`];
    if (ref) {
      ref.scrollIntoView({ behavior: 'smooth', block: 'start' })
    }
  }

  return (
    <div className={`theme--${theme}`}>
      <Head>
        {/* <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" /> */}
      </Head>

      <main className="main" id="main">
        <Layout>
          <Header
            preHeading={header.preHeading}
            heading={header.heading}
            subHeading={header.subHeading}
            text={header.text}
            ctaText={header.ctaText}
            scrollTo={scrollTo}
          />
          <Section
            heading="About Me"
            ref={(el) => { sectionRefs.current['About Me'.toLowerCase()] = el }}
          >
            <About content={about.content} image={about.image} />
          </Section>
          <Section
            heading="Work"
            ref={(el) => { sectionRefs.current['Work'.toLowerCase()] = el }}
          >
            { projectCards.map((data, i) => (
              <ProjectCard
                key={data.title || i}
                title={data.title}
                description={data.description}
                tools={data.tools}
                links={data.links}
                image={data.image}
                showInverse={!!(i % 2)}
              />
            ))}
          </Section>
          <Section
            heading="Photography"
            ref={(el) => { sectionRefs.current['Photography'.toLowerCase()] = el }}
          >
            <Gallery images={gallery} />
          </Section>
          <Section
            heading="Contact"
            ref={(el) => { sectionRefs.current['Contact'.toLowerCase()] = el }}
          >
            <Contact
              text={contact.text}
              ctaText={contact.ctaText}
              email={contact.email}
            />
          </Section>
        </Layout>
        <Themebar />
        <Sidebar
          navHeadings={sidebar.navHeadings}
          social={sidebar.social}
          scrollTo={scrollTo}
          sectionInView={sectionInView}
        />
      </main>
    </div>
  )
}
